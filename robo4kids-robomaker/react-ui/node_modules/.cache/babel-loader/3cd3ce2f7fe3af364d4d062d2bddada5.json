{"ast":null,"code":"import send from \"./../iotConnection\";\n\nfunction direction_factory(a, b, time1, time2) {\n  return function () {\n    return new Promise(function (resolve, reject) {\n      var interval = setInterval(function () {\n        send(a, b);\n      }, time1);\n      setTimeout(function () {\n        clearInterval(interval);\n        send(0, 0);\n        resolve();\n      }, time2);\n    });\n  };\n}\n\nfunction loop(input, inside_c, rfuntion) {\n  console.log(inside_c);\n  var n = parseInt(input);\n\n  for (let i = 0; i < n; i++) {\n    rfuntion(inside_c);\n  }\n} // function sensor (input, inside_c,rfuntion){\n//   while (input > 3){\n//\n//   }\n//\n//   run();\n//   rfuntion(inside_c)\n// \n//\n// }\n\n\nconst left = direction_factory(0, 1, 24, 3500);\nconst right = direction_factory(0, -1, 24, 3500);\nconst forward = direction_factory(1, 0, 24, 1000);\nconst reverse = direction_factory(-1, 0, 24, 1000);\n\nfunction get_function(command) {\n  const dict = {\n    \"L\": left,\n    \"R\": right,\n    \"X\": loop,\n    \"F\": forward,\n    \"B\": reverse\n  };\n  return dict[command];\n}\n\nexport default get_function;","map":{"version":3,"sources":["/Users/antonfu/Documents/Capstone Project/Robo4Kids/roboblockly/src/components/customBlocks/direction_factory.js"],"names":["send","direction_factory","a","b","time1","time2","Promise","resolve","reject","interval","setInterval","setTimeout","clearInterval","loop","input","inside_c","rfuntion","console","log","n","parseInt","i","left","right","forward","reverse","get_function","command","dict"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,oBAAjB;;AAGA,SAASC,iBAAT,CAA2BC,CAA3B,EAA6BC,CAA7B,EAA+BC,KAA/B,EAAqCC,KAArC,EAA2C;AACvC,SAAO,YAAU;AACf,WAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACE,UAAIC,QAAQ,GAAGC,WAAW,CAAC,YAAY;AAACV,QAAAA,IAAI,CAACE,CAAD,EAAGC,CAAH,CAAJ;AAAW,OAAzB,EAA2BC,KAA3B,CAA1B;AACAO,MAAAA,UAAU,CAAC,YAAU;AACnBC,QAAAA,aAAa,CAACH,QAAD,CAAb;AACAT,QAAAA,IAAI,CAAC,CAAD,EAAG,CAAH,CAAJ;AACAO,QAAAA,OAAO;AACR,OAJS,EAIPF,KAJO,CAAV;AAKD,KARM,CAAP;AASC,GAVH;AAWC;;AAEL,SAASQ,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,QAA/B,EAAwC;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,MAAII,CAAC,GAAGC,QAAQ,CAACN,KAAD,CAAhB;;AACA,OAAM,IAAIO,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGF,CAArB,EAAwBE,CAAC,EAAzB,EAA4B;AACxBL,IAAAA,QAAQ,CAACD,QAAD,CAAR;AACD;AACF,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMO,IAAI,GAAGrB,iBAAiB,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,IAAR,CAA9B;AACA,MAAMsB,KAAK,GAAGtB,iBAAiB,CAAC,CAAD,EAAG,CAAC,CAAJ,EAAM,EAAN,EAAS,IAAT,CAA/B;AACA,MAAMuB,OAAO,GAAGvB,iBAAiB,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,IAAR,CAAjC;AACA,MAAMwB,OAAO,GAAGxB,iBAAiB,CAAC,CAAC,CAAF,EAAI,CAAJ,EAAM,EAAN,EAAS,IAAT,CAAjC;;AAGA,SAASyB,YAAT,CAAsBC,OAAtB,EAA8B;AAC1B,QAAMC,IAAI,GAAC;AACX,SAAMN,IADK;AAEX,SAAKC,KAFM;AAGX,SAAIV,IAHO;AAIX,SAAIW,OAJO;AAKX,SAAIC;AALO,GAAX;AAMF,SAAOG,IAAI,CAACD,OAAD,CAAX;AAED;;AAED,eAAeD,YAAf","sourcesContent":["import send from \"./../iotConnection\"\n\n\nfunction direction_factory(a,b,time1,time2){\n    return function(){\n      return new Promise(function(resolve, reject)\n      {\n        var interval = setInterval(function () {send(a,b);}, time1);\n        setTimeout(function(){\n          clearInterval(interval);\n          send(0,0)\n          resolve()\n        }, time2);\n      })\n      }\n    }\n\nfunction loop(input, inside_c, rfuntion){\n  console.log(inside_c)\n  var\tn = parseInt(input);\n  for  (let i = 0; i < n; i++){\n      rfuntion(inside_c)\n    }\n  }\n\n// function sensor (input, inside_c,rfuntion){\n//   while (input > 3){\n//\n//   }\n//\n//   run();\n//   rfuntion(inside_c)\n// \n//\n// }\n\n\nconst left = direction_factory(0,1,24,3500)\nconst right = direction_factory(0,-1,24,3500)\nconst forward = direction_factory(1,0,24,1000)\nconst reverse = direction_factory(-1,0,24,1000)\n\n\nfunction get_function(command){\n    const dict={\n    \"L\" : left,\n    \"R\" :right,\n    \"X\":loop ,\n    \"F\":forward,\n    \"B\":reverse }\n  return dict[command];\n\n}\n\nexport default get_function;\n"]},"metadata":{},"sourceType":"module"}