{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/antonfu/Documents/Capstone Project/Robo4Kids/roboblockly/src/components/levels/level2.js\",\n    _s2 = $RefreshSig$();\n\nimport './../../App.css';\nimport './../customBlocks/directionblocks';\nimport React, { useState, useEffect } from 'react';\nimport ReactBlockly from 'react-blockly';\nimport Blockly from 'blockly';\nimport { Progress } from 'reactstrap';\nimport { Button, Modal } from 'react-bootstrap';\nimport image from './../../dolphin.jpg'; //\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col'\n\nimport RunCode from './../runCode';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './../../aws-exports';\nimport { withAuthenticator } from 'aws-amplify-react'; // or 'aws-amplify-react-native';\n\nimport '@aws-amplify/ui/dist/style.css';\nimport { PubSub, Auth } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\nAmplify.configure(awsconfig);\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: 'us-west-2',\n  aws_pubsub_endpoint: 'wss://ajlhtk9kwdt15-ats.iot.us-west-2.amazonaws.com/mqtt'\n}));\n\nfunction Level2(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //const initialXml = '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n  const toolboxCategories = [{\n    name: 'Direcction',\n    colour: '#5CA699',\n    blocks: [{\n      type: 'robot_direcction'\n    }, {\n      type: 'robot_forward'\n    }, {\n      type: 'robot_reverse'\n    }, {\n      type: 'robot_loop'\n    }, {\n      type: 'math_number'\n    }]\n  }];\n  const [code, setCode] = useState('');\n  const [sensor, setSensor] = useState('');\n\n  function workspaceDidChange(workspace) {\n    const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace)); //    document.getElementById('generated-xml').innerText = newXml;\n\n    const code = Blockly.JavaScript.workspaceToCode(workspace);\n    setCode(code);\n  }\n\n  useEffect(() => //human_detection\n  PubSub.subscribe('jetbot_msg/camera').subscribe({\n    next: data => {\n      try {\n        setSensor(data.value);\n        console.log(data.value);\n      } catch (error) {\n        console.log(\"Error, are you sending the correct data?\");\n      }\n    },\n    error: error => console.error(error),\n    close: () => console.log('Done')\n  }), []);\n\n  function Challenge() {\n    _s();\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    if (sensor.message === \"Human\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          animated: true,\n          color: \"success\",\n          value: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-grid gap-2 d-md-flex justify-content-md-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            size: \"sm\",\n            onClick: handleShow,\n            children: \"Finish!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          backdrop: \"static\",\n          keyboard: false,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Congratulations My Friend!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [\"AWSome you did it!! Now, Please go back to have more fun!!\", /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100\",\n              src: image,\n              alt: \"Error Loading the Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: props.menu,\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  _s(Challenge, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blocklyArea\",\n    children: [/*#__PURE__*/_jsxDEV(ReactBlockly, {\n      toolboxCategories: toolboxCategories,\n      wrapperDivClassName: \"blocklyDiv\",\n      workspaceConfiguration: {\n        grid: {\n          spacing: 20,\n          length: 3,\n          colour: '#ccc',\n          snap: true\n        }\n      },\n      workspaceDidChange: workspaceDidChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"runButton\",\n      children: [/*#__PURE__*/_jsxDEV(RunCode, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Challenge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Level2, \"vkEKBzGoXxPvw2dNpxjOZkjsTOg=\");\n\n_c = Level2;\nexport default Level2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level2\");","map":{"version":3,"sources":["/Users/antonfu/Documents/Capstone Project/Robo4Kids/roboblockly/src/components/levels/level2.js"],"names":["React","useState","useEffect","ReactBlockly","Blockly","Progress","Button","Modal","image","RunCode","Amplify","awsconfig","withAuthenticator","PubSub","Auth","AWSIoTProvider","configure","addPluggable","aws_pubsub_region","aws_pubsub_endpoint","Level2","props","toolboxCategories","name","colour","blocks","type","code","setCode","sensor","setSensor","workspaceDidChange","workspace","newXml","Xml","domToText","workspaceToDom","JavaScript","workspaceToCode","subscribe","next","data","value","console","log","error","close","Challenge","show","setShow","handleClose","handleShow","message","menu","grid","spacing","length","snap"],"mappings":"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","sourcesContent":["import './../../App.css';\nimport './../customBlocks/directionblocks';\nimport React, { useState, useEffect }  from 'react';\nimport ReactBlockly from 'react-blockly';\nimport Blockly from 'blockly';\nimport { Progress } from 'reactstrap';\nimport { Button, Modal } from 'react-bootstrap';\nimport image from './../../dolphin.jpg'\n//\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col'\n\nimport RunCode from './../runCode';\n\nimport Amplify from 'aws-amplify';\nimport awsconfig from './../../aws-exports';\nimport { withAuthenticator } from 'aws-amplify-react'; // or 'aws-amplify-react-native';\nimport '@aws-amplify/ui/dist/style.css';\nimport { PubSub, Auth } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\n\nAmplify.configure(awsconfig);\n\nAmplify.addPluggable(new AWSIoTProvider({\n aws_pubsub_region: 'us-west-2',\n aws_pubsub_endpoint: 'wss://ajlhtk9kwdt15-ats.iot.us-west-2.amazonaws.com/mqtt',\n}));\n\n\nfunction Level2(props) {\n  //const initialXml = '<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"text\" x=\"70\" y=\"30\"><field name=\"TEXT\"></field></block></xml>';\n\n  const toolboxCategories = [\n    {\n      name: 'Direcction',\n      colour: '#5CA699',\n      blocks: [\n        {\n          type: 'robot_direcction'\n        },\n        {\n          type: 'robot_forward'\n        },\n        {\n          type: 'robot_reverse'\n        },\n\n        {\n          type: 'robot_loop'\n        },\n        {\n          type: 'math_number'\n        },\n      ]\n    },\n  ]\n\n  const [code, setCode] = useState('');\n  const [sensor, setSensor] = useState('');\n\n  function workspaceDidChange(workspace) {\n    const newXml = Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace));\n//    document.getElementById('generated-xml').innerText = newXml;\n\n    const code = Blockly.JavaScript.workspaceToCode(workspace);\n    setCode(code);\n  }\n\n  useEffect(() =>\n   //human_detection\n     PubSub.subscribe('jetbot_msg/camera').subscribe({\n     next: data => {\n       try{\n         setSensor(data.value)\n         console.log(data.value);\n       }\n       catch (error){\n         console.log(\"Error, are you sending the correct data?\");\n       }\n     },\n     error: error => console.error(error),\n     close: () => console.log('Done'),\n   }),[]\n );\n\n  function Challenge(){\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    if (sensor.message === \"Human\"){\n      return (\n        <div>\n          <div className=\"text-center\">100%</div>\n          <Progress animated color=\"success\" value=\"100\" />\n          <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n          <Button variant=\"info\" size=\"sm\" onClick={handleShow}>\n            Finish!\n          </Button>\n          </div>\n          <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n            <Modal.Header closeButton>\n              <Modal.Title>Congratulations My Friend!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              AWSome you did it!! Now, Please go back to have more fun!!\n              <img\n                className=\"d-block w-100\"\n                src={image}\n                alt=\"Error Loading the Image\"\n              />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={props.menu}>Go Back</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div className=\"text-center\">0%</div>\n          <Progress />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div id=\"blocklyArea\">\n      <ReactBlockly\n        toolboxCategories={toolboxCategories}\n        wrapperDivClassName=\"blocklyDiv\"\n        workspaceConfiguration={{\n          grid: {\n            spacing: 20,\n            length: 3,\n            colour: '#ccc',\n            snap: true,\n          },\n        }}\n        workspaceDidChange={workspaceDidChange}\n      />\n      <div id=\"runButton\">\n        <RunCode code={code}/>\n        <Challenge/>\n      </div>\n    </div>\n  )\n}\n\nexport default Level2;\n"]},"metadata":{},"sourceType":"module"}