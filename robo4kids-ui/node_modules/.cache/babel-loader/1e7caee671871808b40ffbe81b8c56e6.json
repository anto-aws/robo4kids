{"ast":null,"code":"import Blockly from 'blockly';\nimport 'blockly/javascript'; //import direction_factory from './direction_factory'\n\nBlockly.Blocks['robot_direcction'] = {\n  init: function () {\n    this.appendDummyInput().appendField(\"Move\");\n    this.appendDummyInput().appendField(new Blockly.FieldDropdown([[\"Left\", \"Left\"], [\"Right\", \"Right\"]]), \"NAME\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['robot_forward'] = {\n  init: function () {\n    this.appendDummyInput().appendField(\"Foward\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['robot_reverse'] = {\n  init: function () {\n    this.appendDummyInput().appendField(\"Reverse\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['robot_loop'] = {\n  init: function () {\n    this.appendDummyInput().appendField(\"Loop\");\n    this.appendValueInput(\"n\").setCheck(\"Number\");\n    this.appendStatementInput(\"internal_code\").setCheck(null);\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n};\nBlockly.Blocks['robot_laser'] = {\n  init: function () {\n    this.appendDummyInput().appendField(\"if Laser sensor\");\n    this.appendStatementInput(\"internal_code\").setCheck(null).appendField(\"do:\");\n    this.setColour(230);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n  }\n}; //TODO: Change leters to words, parsing code is already done\n\nBlockly.JavaScript['robot_direcction'] = function (block) {\n  var dropdown_name = block.getFieldValue('NAME'); // TODO: Assemble JavaScript into code variable.\n\n  if (dropdown_name == \"Left\") {\n    return \"L,\";\n  } else {\n    return 'R,';\n  }\n};\n\nBlockly.JavaScript['robot_forward'] = function (block) {\n  // TODO: Assemble JavaScript into code variable.\n  var code = 'F,';\n  return code;\n};\n\nBlockly.JavaScript['robot_reverse'] = function (block) {\n  // TODO: Assemble JavaScript into code variable.\n  var code = 'B,';\n  return code;\n};\n\nBlockly.JavaScript['robot_loop'] = function (block) {\n  var value_n = Blockly.JavaScript.valueToCode(block, 'n', Blockly.JavaScript.ORDER_ATOMIC);\n  var statements_internal_code = Blockly.JavaScript.statementToCode(block, 'internal_code'); // TODO: Assemble JavaScript into code variable.\n\n  let L = statements_internal_code.trim().length + 2;\n  var code = 'X,' + value_n + ',' + L + ',(' + statements_internal_code.trim() + ')';\n  console.log(statements_internal_code, code);\n  return code;\n};\n\nBlockly.JavaScript['robot_laser'] = function (block) {\n  var statements_internal_code = Blockly.JavaScript.statementToCode(block, 'internal_code'); // TODO: Assemble JavaScript into code variable.\n\n  let L = statements_internal_code.trim().length + 2;\n  var code = 'L,' + 0 + ',' + L + ',(' + statements_internal_code.trim() + ')';\n  return code;\n};","map":{"version":3,"sources":["/Users/antonfu/Documents/Capstone Project/Robo4Kids/roboblockly/src/components/customBlocks/directionblocks.js"],"names":["Blockly","Blocks","init","appendDummyInput","appendField","FieldDropdown","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","appendValueInput","setCheck","appendStatementInput","JavaScript","block","dropdown_name","getFieldValue","code","value_n","valueToCode","ORDER_ATOMIC","statements_internal_code","statementToCode","L","trim","length","console","log"],"mappings":"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","sourcesContent":["import Blockly from 'blockly';\nimport 'blockly/javascript';\n//import direction_factory from './direction_factory'\n\n\nBlockly.Blocks['robot_direcction'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Move\");\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldDropdown([[\"Left\",\"Left\"], [\"Right\",\"Right\"]]), \"NAME\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['robot_forward'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Foward\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['robot_reverse'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Reverse\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['robot_loop'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"Loop\");\n    this.appendValueInput(\"n\")\n        .setCheck(\"Number\");\n    this.appendStatementInput(\"internal_code\")\n        .setCheck(null);\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.Blocks['robot_laser'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"if Laser sensor\");\n    this.appendStatementInput(\"internal_code\")\n        .setCheck(null)\n        .appendField(\"do:\");\n    this.setColour(230);\n this.setTooltip(\"\");\n this.setHelpUrl(\"\");\n  }\n};\n\n//TODO: Change leters to words, parsing code is already done\n\nBlockly.JavaScript['robot_direcction'] = function(block) {\n  var dropdown_name = block.getFieldValue('NAME');\n  // TODO: Assemble JavaScript into code variable.\n  if (dropdown_name ==\"Left\"){\n    return \"L,\";\n  }\n  else{\n    return 'R,';\n  }\n};\n\n\nBlockly.JavaScript['robot_forward'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  var code = 'F,';\n  return code;\n};\n\nBlockly.JavaScript['robot_reverse'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  var code = 'B,';\n  return code;\n};\n\nBlockly.JavaScript['robot_loop'] = function(block) {\n  var value_n = Blockly.JavaScript.valueToCode(block, 'n', Blockly.JavaScript.ORDER_ATOMIC);\n  var statements_internal_code = Blockly.JavaScript.statementToCode(block, 'internal_code');\n  // TODO: Assemble JavaScript into code variable.\n  let L = statements_internal_code.trim().length+2\n  var code = 'X,'+value_n+','+L+',('+statements_internal_code.trim()+ ')';\n  console.log(statements_internal_code, code)\n  return code;\n};\n\n\nBlockly.JavaScript['robot_laser'] = function(block) {\n  var statements_internal_code = Blockly.JavaScript.statementToCode(block, 'internal_code');\n  // TODO: Assemble JavaScript into code variable.\n  let L = statements_internal_code.trim().length+2\n  var code = 'L,'+0+','+L+',('+statements_internal_code.trim()+ ')';\n  return code;\n};\n"]},"metadata":{},"sourceType":"module"}