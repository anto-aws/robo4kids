"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _immutable = require("immutable");

var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));

var _BlocklyToolboxCategory = _interopRequireDefault(require("./BlocklyToolboxCategory"));

var _BlocklyToolboxBlock = _interopRequireDefault(require("./BlocklyToolboxBlock"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = _getPrototypeOf(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var BlocklyToolbox =
/*#__PURE__*/
function (_React$Component) {
  _inherits(BlocklyToolbox, _React$Component);

  var _super = _createSuper(BlocklyToolbox);

  function BlocklyToolbox() {
    var _this;

    _classCallCheck(this, BlocklyToolbox);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      _this.props.didUpdate();
    });

    _defineProperty(_assertThisInitialized(_this), "shouldComponentUpdate", function (nextProps) {
      return !((0, _immutable.is)(nextProps.categories, _this.props.categories) && (0, _immutable.is)(nextProps.blocks, _this.props.blocks));
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidUpdate", function () {
      _this.props.didUpdate();
    });

    _defineProperty(_assertThisInitialized(_this), "getRootNode", function () {
      return _this.rootNode;
    });

    _defineProperty(_assertThisInitialized(_this), "processCategory", function (category) {
      var processedCategory = category;

      if (processedCategory.has('categories')) {
        processedCategory = category.update('categories', function (subcategories) {
          return subcategories.map(_this.processCategory);
        });
      }

      if (_this.props.processCategory) {
        return _this.props.processCategory(processedCategory);
      }

      return processedCategory;
    });

    _defineProperty(_assertThisInitialized(_this), "renderCategories", function (categories) {
      return categories.map(function (category, i) {
        if (category.get('type') === 'sep') {
          return (
            /*#__PURE__*/
            _react.default.createElement("sep", {
              key: "sep_".concat(i)
            })
          );
        }

        if (category.get('type') === 'search') {
          return (
            /*#__PURE__*/
            _react.default.createElement("search", {
              key: "search_".concat(i)
            })
          );
        }

        return (
          /*#__PURE__*/
          _react.default.createElement(_BlocklyToolboxCategory.default, {
            name: category.get('name'),
            custom: category.get('custom'),
            colour: category.get('colour'),
            expanded: category.get('expanded'),
            key: "category_".concat(category.get('name'), "_").concat(i),
            blocks: category.get('blocks'),
            button: category.get('button'),
            categories: category.get('categories')
          })
        );
      });
    });

    _defineProperty(_assertThisInitialized(_this), "render", function () {
      if (_this.props.categories) {
        return (
          /*#__PURE__*/
          _react.default.createElement("xml", {
            style: {
              display: 'none'
            },
            is: "div",
            ref: function ref(node) {
              _this.rootNode = node;
            }
          }, _this.renderCategories(_this.props.categories.map(_this.processCategory)))
        );
      }

      return (
        /*#__PURE__*/
        _react.default.createElement("xml", {
          style: {
            display: 'none'
          },
          is: "div",
          ref: function ref(node) {
            _this.rootNode = node;
          }
        }, _this.props.blocks.map(_BlocklyToolboxBlock.default.renderBlock))
      );
    });

    return _this;
  }

  return BlocklyToolbox;
}(_react.default.Component);

_defineProperty(BlocklyToolbox, "propTypes", {
  categories: _reactImmutableProptypes.default.list,
  blocks: _reactImmutableProptypes.default.list,
  processCategory: _propTypes.default.func,
  didUpdate: _propTypes.default.func
});

_defineProperty(BlocklyToolbox, "defaultProps", {
  categories: null,
  blocks: null,
  processCategory: null,
  didUpdate: null
});

var _default = BlocklyToolbox;
exports.default = _default;